<?php
$requestedWith = isset($_SERVER['HTTP_X_REQUESTED_WITH'])
    ? $_SERVER['HTTP_X_REQUESTED_WITH']
    : false;

if ($requestedWith && ('XMLHttpRequest' === $requestedWith)):
    // Very bad but working work-around.
    $this->layout()->setTemplate('error/index');

    header('Content-type: application/json');

    $response = array(
        'success' => false,
        'message' => "An error occurred"
    );

    if (isset($this->display_exceptions) && $this->display_exceptions) {
        if (!isset($this->exception) || !$this->exception instanceof Exception) {
            $response['exception'] = 'No Exception available';
        } else {
            $response['exception']['file'] = sprintf(
                '%s:%s', $this->exception->getFile(), $this->exception->getLine()
            );
            $response['exception']['message'] = $this->exception->getMessage();
            $response['exception']['trace'] = $this->exception->getTraceAsString();
            $response['exception']['exception'] = get_class($this->exception);

            if ($this->exception->getPrevious()) {
                $response['exception']['previous'] = array();

                foreach ($this->exception->getPrevious() as $i => $previous) {
                    $response['exception']['previous'][$i]['file'] = sprintf(
                        '%s:%s', $previous->getFile(), $previous->getLine()
                    );
                    $response['exception']['previous'][$i]['message'] = $previous->getMessage();
                    $response['exception']['previous'][$i]['trace'] = $previous->getTraceAsString;
                    $response['exception']['previous'][$i]['exception'] = get_class($previous);
                }
            }
        }
    }

    print json_encode($response);
else:
    ?>
    TODO print data in view/error/index
    <script type="text/javascript">
        var loader = document.getElementById('application-header-loader');
        loader.style.visibility = 'hidden';
    </script>
<?php endif; ?>